// <auto-generated />
using ECom.Services.Balance.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace ECom.Services.Balance.Infrastructure.UserBalanceMigrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20220505022420_Initial_Oracle")]
    partial class Initial_Oracle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ECom.Services.Balance.Domain.AggregateModels.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Credit_Limit");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("User_Name");

                    b.HasKey("Id");

                    b.ToTable("userbalance", (string)null);
                });

            modelBuilder.Entity("ECom.Services.Balance.Infrastructure.KafkaOffset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CommandOffset")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("Command_Offset");

                    b.Property<long>("PersistentOffset")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("Persistent_Offset");

                    b.HasKey("Id");

                    b.ToTable("kafkaoffset", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
